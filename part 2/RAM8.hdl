// This file is adapted from part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.

/**
 * Memory of 8 registers, each 8 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[8], load, address[3];
    OUT out[8];

    PARTS:
	
	DMux8Way(in=load,sel=address,a=a,b=b,c=c,d=d,e=e,f=f,g=g,h=h);

Register8(in=in,load=a,out=oa);
Register8(in=in,load=b,out=ob);
Register8(in=in,load=c,out=oc);
Register8(in=in,load=d,out=od);
Register8(in=in,load=e,out=oe);
Register8(in=in,load=f,out=of);
Register8(in=in,load=g,out=og);
Register8(in=in,load=h,out=oh);

Mux8Way8(a=oa,b=ob,c=oc,d=od,e=oe,f=of,g=og,h=oh,sel=address,out=out);

}

